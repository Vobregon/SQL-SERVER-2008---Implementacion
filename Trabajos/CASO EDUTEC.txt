--1. CREAR LA BASE DE DATOS EDUTEC

Create DATABASE EDUTEC

ON PRIMARY (
NAME=EDUTEC_dat,
FILENAME='C:\DATA\EDUTEC.mdf',
SIZE=30 MB,
MAXSIZE=50 MB,
FILEGROWTH = 2 MB
)
LOG ON (
NAME=EDUTEC_log,
FILENAME='C:\DATA\EDUTEC.ldf',
SIZE=10 MB,
MAXSIZE=20 MB,
FILEGROWTH = 2 MB
)
go

use EDUTEC
go

--2. CREAR LAS TABLAS

CREATE TABLE PROFESOR(
idProfesor INT NOT NULL PRIMARY KEY,
Nombre  VARCHAR(60)NOT NULL,
Telefono CHAR (10)NOT NULL
)

CREATE TABLE ALUMNO(
idAlumno INT NOT NULL PRIMARY KEY,
Nombre  VARCHAR(60)NOT NULL,
Telefono CHAR (10)NOT NULL
)

CREATE TABLE TARIFA(
idTarifa INT NOT NULL PRIMARY KEY,
Costo  DECIMAL(8,2)NOT NULL,
)

CREATE TABLE MATRICULA(
idCursoProgramado INT NOT NULL REFERENCES CURSOPROGRAMADO,
idAlumno INT NOT NULL REFERENCES ALUMNO,
Examen DECIMAL(4,2)NOT NULL,
Condicion VARCHAR(20)NOT NULL,
PRIMARY KEY (idCursoProgramado,idAlumno)
)

CREATE TABLE CURSOPROGRAMADO(
idCursoProgramado INT NOT NULL, 
idProfesor INT NOT NULL REFERENCES PROFESOR,
idCurso INT NOT NULL REFERENCES CURSO,
idAula INT NOT NULL REFERENCES AULA,
idCicloProgramado INT NOT NULL REFERENCES CICLOPROGRAMADO,
Matriculados INT NOT NULL,
Vacantes INT NOT NULL,
PRIMARY KEY (idCursoProgramado)
)

CREATE TABLE CURSO(
idCurso INT NOT NULL,
idTarifa INT NOT NULL REFERENCES TARIFA,
Nombre VARCHAR(60)NOT NULL,
PRIMARY KEY (idCurso)
)

CREATE TABLE AULA(
idAula INT NOT NULL PRIMARY KEY,
Ubicacion VARCHAR(60)NOT NULL,
Capacidad CHAR (30)NOT NULL
)

CREATE TABLE CICLOPROGRAMADO(
idCicloProgramado INT NOT NULL PRIMARY KEY,
FeInicio DATETIME NOT NULL,
FeTermino DATETIME NOT NULL
)


--3. Crear las restricciones Default, Check y Unique

ALTER TABLE PROFESOR
ADD CONSTRAINT DF_TELEFONO DEFAULT 'NO REGISTRA'
FOR TELEFONO

ALTER TABLE TARIFA
ADD CONSTRAINT DF_COSTO DEFAULT 00.00
FOR COSTO

ALTER TABLE CICLOPROGRAMADO
ADD CONSTRAINT chk_01
CHECK(FeInicio<=FeTermino)


ALTER TABLE MATRICULA
ADD CONSTRAINT chk_Examen
CHECK(Examen LIKE '[0-2][0-9]')

ALTER TABLE MATRICULA
DROP CONSTRAINT chk_Examen

ALTER TABLE MATRICULA
ADD CONSTRAINT chk_Examen
CHECK(Examen >=0 AND Examen <=20)

ALTER TABLE ALUMNO
ADD CONSTRAINT u_nombre
UNIQUE(nombre)

-- 4. Insertar 3 filas a cada tabla

INSERT INTO PROFESOR (idProfesor,nombre,Telefono)
VALUES('1','jflores','4492984')

INSERT INTO PROFESOR (idProfesor,nombre,Telefono)
VALUES('2','hvalencia','4492985')

INSERT INTO PROFESOR (idProfesor,nombre,Telefono)
VALUES('3','gcoronel','4492986')

SELECT * FROM PROFESOR

INSERT INTO ALUMNO (idAlumno,nombre,Telefono)
VALUES('1','jperez','4492987')

INSERT INTO ALUMNO (idAlumno,nombre,Telefono)
VALUES('2','preyes','4492988')

INSERT INTO ALUMNO (idAlumno,nombre,Telefono)
VALUES('3','sruiz','4492989')

SELECT * FROM ALUMNO

INSERT INTO TARIFA (idTarifa,Costo)
VALUES('1','250')

INSERT INTO TARIFA (idTarifa,Costo)
VALUES('2','280')

INSERT INTO TARIFA (idTarifa,Costo)
VALUES('3','300')

SELECT * FROM TARIFA

INSERT INTO MATRICULA (idCursoProgramado,idAlumno,Examen,Condicion)
VALUES('10','1','12','APROBADO')

INSERT INTO MATRICULA (idCursoProgramado,idAlumno,Examen,Condicion)
VALUES('20','2','13','APROBADO')

INSERT INTO MATRICULA (idCursoProgramado,idAlumno,Examen,Condicion)
VALUES('30','3','14','APROBADO')

SELECT * FROM MATRICULA

INSERT INTO CURSOPROGRAMADO(idCursoProgramado,idProfesor,idCurso,idAula,idCicloProgramado,Matriculados,Vacantes)
VALUES('10','1','001','100','1','10','25')

INSERT INTO CURSOPROGRAMADO(idCursoProgramado,idProfesor,idCurso,idAula,idCicloProgramado,Matriculados,Vacantes)
VALUES('20','2','002','200','2','12','25')

INSERT INTO CURSOPROGRAMADO(idCursoProgramado,idProfesor,idCurso,idAula,idCicloProgramado,Matriculados,Vacantes)
VALUES('30','3','003','300','3','14','25')

SELECT * FROM CURSOPROGRAMADO

INSERT INTO CURSO(idCurso,idTarifa,Nombre)
VALUES('001','1','SQLSERVER')

INSERT INTO CURSO(idCurso,idTarifa,Nombre)
VALUES('002','2','EXCEL')

INSERT INTO CURSO(idCurso,idTarifa,Nombre)
VALUES('003','3','AUTOCAD')

SELECT * FROM CURSO

INSERT INTO AULA(idAula,Ubicacion,Capacidad)
VALUES('100','FIRSTFLOOR','30')

INSERT INTO AULA(idAula,Ubicacion,Capacidad)
VALUES('200','SECONDFLOOR','30')

INSERT INTO AULA(idAula,Ubicacion,Capacidad)
VALUES('300','THIRDFLOOR','30')

SELECT * FROM AULA

INSERT INTO CICLOPROGRAMADO(idCicloProgramado,FeInicio,FeTermino)
VALUES('1','01/05/2014','28/05/2014')

INSERT INTO CICLOPROGRAMADO(idCicloProgramado,FeInicio,FeTermino)
VALUES('2','02/05/2014','27/05/2014')

INSERT INTO CICLOPROGRAMADO(idCicloProgramado,FeInicio,FeTermino)
VALUES('3','03/05/2014','26/05/2014')

SELECT * FROM CICLOPROGRAMADO

-- CREAR LAS SIGUIENTES CONSULTAS

-- 5.1 CURSO      CANTIDADDEALUMNOS

SELECT CURSO.idCurso
,CURSO.Nombre
,CURSOPROGRAMADO.Matriculados
FROM CURSO
INNER JOIN CURSOPROGRAMADO
ON CURSO.idCurso=CURSOPROGRAMADO.idCurso

-- 5.2 NOMBREALUMNO    CURSO   NOTA

SELECT A.Nombre AS 'NOMBREALUMNO'
,C.Nombre AS 'CURSO'
,M.Examen AS 'NOTA'
FROM ALUMNO AS A
INNER JOIN MATRICULA AS M
ON A.idAlumno=M.idAlumno
INNER JOIN CURSOPROGRAMADO AS CP
ON M.idCursoProgramado=CP.idCursoProgramado
INNER JOIN CURSO AS C
ON CP.idCurso=C.idCurso

-- 5.3 CURSO    MONTORECAUDADO

SELECT C.Nombre AS 'CURSO'
,T.Costo 
,CP.Matriculados
,(T.Costo*CP.Matriculados) AS 'MONTORECAUDADO'
FROM TARIFA AS T
INNER JOIN CURSO AS C
ON T.idTarifa=C.idTarifa
INNER JOIN CURSOPROGRAMADO AS CP
ON C.idCurso=CP.idCurso


-- 5.4 PROFESOR     CURSO    CANTIDADDEALUMNOS

SELECT P.Nombre AS 'PROFESOR'
,C.Nombre AS 'CURSO'
,CP.Matriculados AS 'CANTIDADDEALUMNOS'
FROM PROFESOR AS P
INNER JOIN CURSOPROGRAMADO AS CP
ON P.idProfesor=CP.idProfesor
INNER JOIN CURSO AS C
ON CP.idCurso=C.idCurso



-- 5.5 TOTALRECAUDADO

SELECT SUM(CP.Matriculados*T.Costo) AS 'TOTAL RECAUDADO'
FROM TARIFA AS T
INNER JOIN CURSO AS C
ON T.idTarifa=C.idTarifa
INNER JOIN CURSOPROGRAMADO AS CP
ON C.idCurso=CP.idCurso
